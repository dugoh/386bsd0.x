################################################################################
## Find an upgrade path to 0.x. A quick look in the git repo shows a push of a
## running machine. Due to the limitations of source code control systems this
## will be very hard to boot directly. Booting the original and upgrading it
## looks like the way to go.

index() {
    echo "<HTML><HEAD><TITLE>LINKS</TITLE></HEAD><BODY><ul>" >index.html
    for file in $(ls|egrep -v "index.html| "); do \
        (\
            printf '<li><a href="'; \
            printf "${file}";       \
            printf '">';            \
            printf "${file}";       \
            printf '</a></li>\n'    \
        )>>index.html;              \
    done
    echo "</ul></BODY></HTML>" >>index.html
}

push() {
    GHP_URL=https://${GHP_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
    git init
    git config user.name "${USER}"
    git config user.email "${GHP_MAIL}"
    git add .
    git commit -m "Deploy to GitHub Pages"
    git push --force --quiet "${GHP_URL}" master:gh-pages
}

slowcat() {
    [[ -z "${3}" ]] && echo usage: $0 file chunksize waittime && return 1
    local c=0
    local b=$(wc -c <${1})
    while [ ${c} -lt ${b} ]; do
        dd if=${1} bs=1 count=${2} skip=${c} 2>/dev/null
        (( c = c + ${2} ))
        sleep ${3}
    done
}

movietime() {
    asciinema rec -y -c '/bin/bash -c ./script' /1.cast
    asciinema upload /1.cast
    exit
}

## init
export TERM=origpc3
ls /1.cast >/dev/null 2>&1 || movietime
cd /
mkdir /gh-pages

## Grab a clean 0.1 install and mount it.

for i in a b c;
    do wget -nv -O - https://dugoh.github.io/386bsd0.1/disk.part-a${i};
done|bunzip2 >/disk.img || exit 1
wget -nv https://dugoh.github.io/386bsd0.1/bochsrc || exit
wget -nv https://dugoh.github.io/386bsd0.1/tunconfig || exit

modprobe ufs
mount -o loop,ro -t ufs disk.img /mnt/

## Copy out the relevant directories.

mkdir /0.1
cd /mnt
cp -R -p etc /0.1/
cp -R -p usr /0.1/
cp -R -p var /0.1/

## Clone the 386bsd github repo and checkout 0.x.
## 75c3124387dda5db245b62552d4da62cf60a82de Nov 2017 <- to test tracking
## aeaabcf90cebcb2c70dae2e3f22e0bbead5927a9 Jan 2019 <- current
cd /
git clone --depth=50 --branch=0.1 https://github.com/386bsd/386bsd.git
cd 386bsd
git checkout -qf aeaabcf90cebcb2c70dae2e3f22e0bbead5927a9
cat .gitignore

## Copy out the relevant directories to diff

mkdir /0.x
cp -R -p etc /0.x/
cp -R -p usr /0.x/
cp -R -p var /0.x/

## Some more reorganisation to solve the high number of differences.

## There is no usr/othersrc in 0.x.

mv /0.1/usr/othersrc/[cegps]* /0.1/usr/src/
rm -rf /0.1/usr/othersrc/

## Clean out kernel build remnants.

rm -rf /0.?/usr/src/sys.386bsd/compile/*

## There are no games in share in 0.x, only a book about chess.

find /0.1/usr/share/games/* -type d -exec rm -rf {} \;

## Check for any new symlinks.

cd /0.1 ; find ./ -type l|sort >/tmp/0.1-links
cd /0.x ; find ./ -type l|sort >/tmp/0.x-links
diff /tmp/0.1-links /tmp/0.x-links |tee /gh-pages/link-diffs.txt

## Remove the directory that will become a link.

rm -rf /0.1/usr/include/vm 

## Get rid of all symlinks to make life easy for diff.

find /0.?/ -type l -exec rm {} \;

## Apply 0.x .gitignore to 0.1.

find /0.1/ -type f -name "*.o" -exec rm -rf {} \;
find /0.1/ -type f -name "*.a" -exec rm -rf {} \;

## The diff should be reasonably sized now. Dump the interim differences.

#diff -qrN /0.1/etc /0.x/etc |tee /gh-pages/etc-i-diffs.txt
#diff -qrN /0.1/usr /0.x/usr |tee /gh-pages/usr-i-diffs.txt
#diff -qrN /0.1/var /0.x/var |tee /gh-pages/var-i-diffs.txt

#### Check /etc

## Some files got corrupt, get rid of them.

for file in $(find /0.x/etc -type f -size +0 -exec grep -zaPL [^\0] {} \;); do
    rm "${file}"
done

## The files differing in /etc/ are mostly local. Clean most of it out.

find /0.?/etc/ -type f ! -name disktab ! -name bin.profile -exec rm -rf {} \;

#### Check /usr

## A bit odd, the ufs dir forks in tree.

cp -R -p /0.1/usr/src/sys.386bsd/ufs /0.1/usr/src/

## Don't delete 0.1 binaries, don't pull in 0.x binaries.

rm $(file $(diff -qr /0.?/usr \
            |grep "^Only"     \
            |sed -e's/: /\//' \
            |cut -f 3         \
            )|grep "pure executable"|cut -d':' -f1)

#### Check /var

## There seems to be nothing to upgrade from there.

rm -rf /0.?/var/

## Dump the differences again.

#echo etc
#diff -qr /0.1/etc /0.x/etc |tee /gh-pages/etc-diffs.txt
#echo usr
#diff -qr /0.1/usr /0.x/usr |tee /gh-pages/usr-diffs.txt

## This is probably all that's needed to upgrade.
#echo totar
#diff -qr /0.x/ /0.1/ \
#  |grep -v "^Only in /0.1/" \
#  |sed -e's/: /\//' \
#       -e's/Only in/OnlyIn/' \
#  |awk '{print $2}'

## Add an upgrade script.

cat >/0.x/upgrade.sh <<__EOF__
date $(date +%y%m%d%H%M.%S)
mv /usr/othersrc/[cegps]* /usr/src/
rm -rf /0.1/usr/othersrc/
find /usr/share/games/* -type d -exec rm -rf {} \;
rm -rf /0.1/usr/include/vm 
ln -s ../src/sys.386bsd/vm /usr/include/vm
cp -R -p /usr/src/sys.386bsd/ufs /usr/src/
tar -xvf /dev/rfd0a
rm -r /sys/compile/*
cd /sys/i386/conf
config GENERICISA
cd /sys/compile/GENERICISA
make depend
make
mv /386bsd /386bsd.old
cp 386bsd /386bsd
find / -name disklabel -exec ls -l {} \;
cd /usr/src/sbin/disklabel
ls -lg /sbin/disklabel
make clean
make
make install
find / -name disklabel -exec ls -l {} \;
ls -ltr
ls -lg /sbin/disklabel
cp obj/disklabel /tmp/
chmod +x /tmp/disklabel
cd /usr/src/sys.386bsd/i386/stand
gcc -o trimhd trimhd.c
gcc -o splice splice.c
strip trimhd splice
make clean
make
make install
echo paths seem b0rked, install from here
/tmp/disklabel -r
#/tmp/disklabel -r -w wd0 vbox generic ./wdboot ./bootwd
disklabel -r -w /dev/wd0 vbox generic ./wdboot ./bootwd
/tmp/disklabel -r
sync; sync; sync
shutdown -rf now
__EOF__
chmod +x /0.x/upgrade.sh

## Tar updated files to floppy.
cd /0.x
( tar cf - $( diff -qr /0.x/ /0.1/     \
              |grep -v "^Only in /0.1" \
              |sed -e's/: /\//'        \
                   -e's/.*0\.x\//.\//' \
                   -e's/ .*//'         \
            )
  dd if=/dev/zero count=1474560
) |head -c 1474560 >/boot.img

## Show contents

tar -tvf /boot.img

## Keystrokes to feed to bochs

cd /
cat >4 <<__EOF__
root

exec sh
cd /
tar -xvf /dev/rfd0a .//upgrade.sh
/upgrade.sh
__EOF__

## Run Bochs.

touch out
(
  until egrep -q 'login:|console' out ; do
    sleep 5;
  done
  sleep 5
  slowcat ./4 4 1
)| bochs -q -f bochsrc |tee -a out
#)| TERM=vt100 bochs -q -f bochsrc |tee -a out |fold -w 84|sed 's/[\x01-\x1F\x7F]//g'
mv out out_4.txt


## Keystrokes to feed to EMU

cat >5 <<__EOF__
root

exec sh
date
sleep 60
sync; sync; sync
shutdown -rf now

__EOF__

touch out
(
  until egrep -q 'login:|console' out ; do
    sleep 5;
  done
  sleep 5
  slowcat ./5 4 1
)| bochs -q -f bochsrc |tee -a out
#)| TERM=vt100 bochs -q -f bochsrc |tee -a out |fold -w 84|sed 's/[\x01-\x1F\x7F]//g'
mv out out_5.txt

## Try QEMU with new kernel.

#touch out
#(
#  until egrep -q 'login:|console' out ; do
#    sleep 5;
#  done
#  sleep 5
#  slowcat ./5 1 .5
#)| script -f -c 'qemu-system-i386                \
#                -cpu qemu32                      \
#                -curses                          \
#                -hda disk.img                    \
#                -M isapc                         \
#                -net nic,model=ne2k_isa          \
#                -no-reboot                       \
#                -m 64                            \
#                -startdate "$(date +%Y-%m-%d)"'  \
# |tee -a out
#mv out out_5.txt

## Push to gh-pages
cd /gh-pages
mv ../bochsrc ./
mv ../tunconfig ./
mv ../out_*.txt ./
cp ../1.cast ./
mv ../boot.img ./
mv ../disk.img ./
bzip2 --best disk.img
split -b 50m "disk.img.bz2" "disk.part-"
rm disk.img.bz2
index
push
